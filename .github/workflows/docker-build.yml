name: Build and Push Docker Image (Auto Version)

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest version
        id: version
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/exam-simulator
          TOKEN=${{ secrets.DOCKERHUB_TOKEN }}
          LATEST_VERSION=$(curl -s -u "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_TOKEN }}" \
            "https://hub.docker.com/v2/repositories/${IMAGE}/tags/?page_size=100" \
            | jq -r '.results[].name' | grep '^v' | sort -V | tail -n 1)
          echo "Latest version: $LATEST_VERSION"
          if [ -z "$LATEST_VERSION" ]; then
            NEW_VERSION="v1"
          else
            NUM=${LATEST_VERSION#v}
            NEW_VERSION="v$((NUM + 1))"
          fi
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/exam-simulator:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/exam-simulator:${{ env.NEW_VERSION }}

      # ðŸš€ Auto-redeploy Portainer Stack
      - name: Redeploy Stack via Portainer API
        run: |
          curl -k -X PUT \
            -H "X-API-Key: ${{ secrets.PORTAINER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"Prune": true}' \
            https://portainer1.haska.in/api/stacks/3?endpointId=2
